from PyQt5.QtSql import QSqlDatabase, QSqlQuery
import sys

arquivo = 'agenda.sqlite'
con = QSqlDatabase.addDatabase("QSQLITE")
con.setDatabaseName(arquivo)
if not con.open():
  print("Erro na base de dados: %s" % con.lastError().databaseText())
  sys.exit()
else:
  createTableQuery = QSqlQuery()
  createTableQuery.exec('CREATE TABLE IF NOT EXISTS agenda (\
            id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL,\
            nome VARCHAR(40) NOT NULL,\
            email VARCHAR(40) NOT NULL,\
            celular VARCHAR(20) NOT NULL)')
  createTableQuery.finish()


def exibir_menu():
  print('''
  
  Escolha uma opção:

  1. Cadastrar uma pessoa
  2. Listar pessoas cadastradas
  3. Procurar dados de uma pessoa
  4. Remover
  5. Alterar
  6. Sair

  ''')


def cadastrar():
  nome = input('Nome: ')  # string
  email = input('E-mail: ')  # string
  celular = input('Celular: ')  # string
  insertDataQuery = QSqlQuery()
  insertDataQuery.prepare('INSERT INTO agenda (nome, email, celular) VALUES (?, ?, ?)')
  insertDataQuery.addBindValue(nome) # dado relativo ao primeiro espaço reservado
  insertDataQuery.addBindValue(email) # dado relativo ao segundo espaço reservado
  insertDataQuery.addBindValue(celular) # dado relativo ao terceiro espaço reservado
  insertDataQuery.exec() # execute a query
  insertDataQuery.finish() # inative a query


def listar():
  query = QSqlQuery()
  query.exec("SELECT nome, email, celular FROM agenda")
  # Índices com nomes para melhorar a legibilidade
  nome, email, celular = range(3)  # 0, 1 e 2
  cont = 0
  
  print(' NOME          | E-MAIL                        | CELULAR')
  print('-'*74)
  while query.next():
    print(f'{query.value(nome):15}| {query.value(email):30}| {query.value(celular):25}')
    cont += 1  # isso aqui é uma abreviação de cont = cont + 1
  query.finish()  
  print('\nQuantidade de registros: ', cont, '\n')


def buscar():  # aqui você completa.... :-)
  procurado = input('Entre com o nome a procurar: ')
  query = QSqlQuery()
  query.prepare("SELECT nome, email, celular FROM agenda WHERE nome LIKE ?")
  query.addBindValue('%'+procurado+'%')
  query.exec()
  # Índices com nomes para melhorar a legibilidade
  nome, email, celular = range(3)  # 0, 1 e 2
  cont = 0
  
  print(' NOME          | E-MAIL                        | CELULAR')
  print('-'*74)
  while query.next():
    print(f'{query.value(nome):15}| {query.value(email):30}| {query.value(celular):25}')
    cont += 1  # isso aqui é uma abreviação de cont = cont + 1
  query.finish()  
  print('\nQuantidade de registros: ', cont, '\n')


def remover():  # aqui você completa.... :-)
  procurado = input('Qual registro gostaria de deletar?' )
  query = QSqlQuery()
  query.prepare("SELECT nome, email, celular FROM agenda WHERE nome LIKE ? ORDER BY nome")
  query.addBindValue('%' +procurado+'%')
  query.exec()
  id, nome, email, celular = range(4)
  achei = False
  while query.next( ):
    print(f'ID = {query.value(id)}, Nome = {query.value(nome)}, Email = {query.value(email)} e  Celular = {query.value(celular)}')
    resposta = input('Deseja deletar o registro acima (S/N)?')
    if resposta == 's' or resposta == 'S' :
        achei = True
        queryUpdate = QSqlQuery( )
        queryUpdate.prepare("Delete agenda SET nome = ?, email = ?, celular = ? WHERE id = ?")
        queryUpdate.exec()
        queryUpdate.finish()
        print('Deletando contato ...')
    if not achei :
       print (f'Pessoa não encontrada com o nome {procurado} ')
    query.finish( )


def alterar():  # aqui você completa.... :-)
  procurado = input('Qual registro gostaria de alterar?' )
  query = QSqlQuery()
  query.prepare("SELECT nome, email, celular FROM agenda WHERE nome LIKE ? ORDER BY nome")
  query.addBindValue('%' +procurado+'%')
  query.exec()
  id, nome, email, celular = range(4)
  achei = False
  while query.next( ):
    print(f'ID = {query.value(id)}, Nome = {query.value(nome)}, Email = {query.value(email)} e  Celular = {query.value(celular)}')
    resposta = input('Deseja alterar o registro acima (S/N)?')
    if resposta == 's' or resposta == 'S' :
        achei = True
        print('Tecle ENTER para manter o valor original do campo, ou entre com o novo valor..')
        nomeAlterar = input('Nome:  ')
        if nomeAlterar == ' ' : nomeAlterar = query.value(nome)
        emailAlterar = input('E-mail:  ')
        if emailAlterar == ' ' : emailAlterar = query.value(email)
        celularAlterar = input('Celular:  ')
        if celularAlterar == ' ' : celularAlterar = query.value(celular)
        idAlterar = query.value(id)

        queryUpdate = QSqlQuery( )
        queryUpdate.prepare("UPDATE agenda SET nome = ?, email = ?, celular = ? WHERE id = ?")
        queryUpdate.addindValue(nomeAlterar)
        queryUpdate.addindValue(emailAlterar)
        queryUpdate.addindValue(celularAlterar)
        queryUpdate.addindValue(idAlterar)
        queryUpdate.exec()
        queryUpdate.finish()
        print('Contato atualizando...')
    if not achei :
      print (f'Pessoa não encontrada com o nome {procurado} ')
    query.finish( )


def main():
  opcao = '0'
  while opcao!='6':
    exibir_menu()
    opcao = input('Entre com a opção desejada: ')
    print()
    if opcao == '1': cadastrar()
    elif opcao == '2': listar()
    elif opcao == '3': buscar()
    elif opcao == '4': remover()
    elif opcao == '5': alterar()
    elif opcao == '6':
      con.close()
      QSqlDatabase.removeDatabase(QSqlDatabase.database().connectionName())
    else:
      print('Opção inválida')


main()
